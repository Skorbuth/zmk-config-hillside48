/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define SYM_L    3
#define NUM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            /* COLEMAK-DH
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   F   |   P   |   B   |-----------------------------------|   J   |   L   |   U   |   Y   |   ;   | BKSPC |
 * | TAB   |   A   |   R   |   S   |   T   |   G   |-----------------------------------|   M   |   N   |   E   |   I   |   O   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   D   |   V   | CAPS  |-------------------|  ESC  |   K   |   H   |   ,   |   .   |   /   | SHIFT |
 * ----------------| CTRL  |-------|  GUI  |  ALT  | SPACE |  Sym  |---|  Num  | SPACE |  ALT  |  GUI  |-------|   '   |----------------
 */

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp F  &kp P     &kp B                                                       &kp J     &kp L     &kp U      &kp Y    &kp SEMI   &kp BSPC
&kp TAB     &kp A  &kp R  &kp S  &kp T     &kp G                                                       &kp M     &kp N     &kp E      &kp I    &kp O      &kp ENTER
&kp LSHFT   &kp Z  &kp X  &kp C  &kp D     &kp V           &kp CAPS                   &kp PRINTSCREEN  &kp K     &kp H     &kp COMMA  &kp DOT  &kp SLASH  &kp RSHFT
                   &none         &kp LGUI  &kp LEFT_SHIFT  &lt 1 SPACE  &mo 0  &mo 0  &kp SPACE        &kp LALT  &kp RGUI             &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans    &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &kp LSHIFT  &trans                                  &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans               &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR                                   &kp MINUS  &kp N7  &kp N8  &kp N9  &kp STAR   &kp CARET
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                                       &kp PLUS   &kp N4  &kp N5  &kp N6  &kp SLASH  &trans
&trans  &trans  &trans  &kp LBKT              &kp RBKT               &trans      &trans                  &trans   &kp N0     &kp N1  &kp N2  &kp N3  &trans     &trans
                &trans                        &trans                 &trans      &trans  &trans  &trans  &kp DOT  &trans     &trans          &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp A   &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp C_VOLUME_UP                                  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans                                           &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 3  &bt BT_DISC 3  &bt BT_DISC 4  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans           &trans                  &trans  &trans         &trans         &trans         &trans         &trans         &bt BT_CLR
                 &trans          &trans  &trans           &trans  &trans  &trans  &trans  &trans         &trans                        &trans
            >;
        };
    };
};
